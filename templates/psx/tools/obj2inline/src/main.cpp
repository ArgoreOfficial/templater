/*
 * Project generated by Templater
 * Argore 2024
 */

#include <fstream>
#include <stdio.h>
#include <sstream>
#include <string>
#include <vector>

size_t split( const std::string& txt, std::vector<std::string>& strs, char ch )
{
	size_t pos = txt.find( ch );
	size_t initialPos = 0;
	strs.clear();

	// Decompose statement
	while ( pos != std::string::npos )
	{
		strs.push_back( txt.substr( initialPos, pos - initialPos ) );
		initialPos = pos + 1;

		pos = txt.find( ch, initialPos );
	}

	// Add the last one
	strs.push_back( txt.substr( initialPos, std::min( pos, txt.size() ) - initialPos + 1 ) );

	return strs.size();
}

int main( int _argc, char* _argv[] )
{
	for ( int i = 0; i < _argc; i++ )
	{
		printf( "%i  %s\n", i, _argv[i]);
	}

	std::string filepath = "D:/SDK/templater/templates/psx/res/scene.obj";
	if ( _argc > 1 )
		filepath = _argv[ 1 ];

	std::vector<std::string> line_split;
	std::ifstream input( filepath );
	bool found_faces = false;

	for ( std::string line; getline( input, line ); )
	{
		split( line, line_split, ' ' );

		if ( line_split.size() < 4 )
			continue;

		if ( line_split[ 0 ] == "v" )
		{
			float a = std::stof( line_split[ 1 ] );
			float b = std::stof( line_split[ 2 ] );
			float c = std::stof( line_split[ 3 ] );
		
			printf( "{ %i, %i, %i, 0 },", (int)(a * 100.0f), (int)( b * 100.0f ), (int)( c * 100.0f ) );
		}
		
		if ( line_split[ 0 ] == "f" )
		{
			if ( !found_faces )
			{
				printf( "\n\n\n" );
				found_faces = true;
			}
			int a = std::stoi( line_split[ 1 ] ) - 1;
			int b = std::stoi( line_split[ 2 ] ) - 1;
			int c = std::stoi( line_split[ 3 ] ) - 1;

			printf( "{ %i, %i, %i },", c, b, a );
		}

		//if ( line_split[ 0 ] == "vn" )
		//{
		//	int a = std::stoi( line_split[ 1 ] ) - 1;
		//	int b = std::stoi( line_split[ 2 ] ) - 1;
		//	int c = std::stoi( line_split[ 3 ] ) - 1;
		//
		//	printf( "{ %i, %i, %i },", c, b, a );
		//}
	}

	while ( true )
	{

	}
	return 0;
}

